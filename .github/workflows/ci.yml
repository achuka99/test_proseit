name: CI/CD Pipeline for Odoo Proseit

on:
  push:
    branches:
      - main
    paths:
      - '**/*'
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U odoo -d odoo"
          --health-interval=20s
          --health-timeout=10s
          --health-retries=5

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Inject Environment Variables
        run: |
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "PGDATA=/var/lib/postgresql/data/pgdata" >> .env
          echo "HOST=postgres" >> .env
          echo "USER=odoo" >> .env
          echo "PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env

      - name: Print PostgreSQL Environment Variables
        run: |
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}"
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}"
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}"

      - name: Start PostgreSQL Service
        run: |
          docker run -d \
          --name postgres \
          -e POSTGRES_DB=${{ secrets.POSTGRES_DB }} \
          -e POSTGRES_USER=${{ secrets.POSTGRES_USER }} \
          -e POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} \
          -p 5432:5432 postgres:13

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..30}; do
            if docker exec postgres pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}; then
              echo "PostgreSQL is ready!";
              exit 0;
            fi
            sleep 5;
          done
          echo "PostgreSQL did not become ready in time";
          docker logs postgres;
          exit 1;

      - name: Build Odoo Docker Image
        run: docker-compose -f docker-compose.yml build

      - name: Start Odoo Services
        run: docker-compose -f docker-compose.yml up -d

      - name: Wait for Services to be Ready
        run: |
          for i in {1..30}; do
            if curl -s http://127.0.0.1:8069/web/database/selector | grep -q "Databases"; then
              echo "Odoo is ready!";
              exit 0;
            fi
            sleep 5;
          done
          echo "Odoo did not become ready in time";
          docker-compose logs;
          exit 1;

      - name: Run Tests
        run: |
          docker-compose exec -T odoo odoo --test-enable --stop-after-init \
          --addons-path=/mnt/extra-addons,/usr/lib/python3/dist-packages/odoo/addons

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

      - name: Build Docker Image
        run: |
          docker build -t achuka99/odoo-proseit:latest .

      - name: Push Docker Image to Docker Hub
        run: |
          docker push achuka99/odoo-proseit:latest
