name: CI/CD Pipeline for Odoo Proseit Project

on:
  push:
    branches:
      - main
    paths:
      - '**/*'
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: odoo_test
          POSTGRES_PASSWORD: odoo_test
          POSTGRES_USER: odoo_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U odoo_test -d odoo_test"
          --health-interval=20s
          --health-timeout=10s
          --health-retries=5

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.23.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Create Dockerfile
        run: |
          cat << 'EOF' > Dockerfile
          FROM odoo:17.0
          
          USER root
          RUN apt-get update && apt-get install -y \
              python3-pip \
              build-essential \
              python3-dev \
              && rm -rf /var/lib/apt/lists/*
          
          COPY ./config/odoo.conf /etc/odoo/
          COPY ./addons /mnt/extra-addons/
          
          RUN chown -R odoo:odoo /etc/odoo/odoo.conf \
              && chown -R odoo:odoo /mnt/extra-addons
          
          USER odoo
          
          EXPOSE 8069 8071
          
          CMD ["odoo"]
          EOF

      - name: Create .env file
        run: |
          cat << EOF > .env
          POSTGRES_DB=odoo_test
          POSTGRES_PASSWORD=odoo_test
          POSTGRES_USER=odoo_test
          PGDATA=/var/lib/postgresql/data/pgdata
          HOST=postgres
          USER=odoo_test
          PASSWORD=odoo_test
          EOF

      - name: Create required directories and files
        run: |
          mkdir -p config addons
          echo "[options]
          addons_path = /mnt/extra-addons,/usr/lib/python3/dist-packages/odoo/addons
          admin_passwd = admin
          db_host = postgres
          db_port = 5432
          db_user = odoo_test
          db_password = odoo_test
          db_name = odoo_test" > config/odoo.conf

      - name: Create docker-compose.yml
        run: |
          cat << EOF > docker-compose.yml
          version: '3.8'
          
          services:
            odoo:
              image: achuka99/odoo-proseit:latest
              env_file: .env
              depends_on:
                - postgres
              ports:
                - "127.0.0.1:8069:8069"
              volumes:
                - odoo_data:/var/lib/odoo
                - ./config:/etc/odoo
                - ./addons:/mnt/extra-addons
              networks:
                - odoo_network
          
            postgres:
              image: postgres:13
              env_file: .env
              volumes:
                - postgres_data:/var/lib/postgresql/data/pgdata
              networks:
                - odoo_network
          
          volumes:
            odoo_data:
            postgres_data:
          
          networks:
            odoo_network:
              driver: bridge
          EOF

      - name: Build and tag Docker Image
        run: |
          docker build -t achuka99/odoo-proseit:${{ github.sha }} \
                      -t achuka99/odoo-proseit:latest .

      - name: Start Odoo Services
        run: |
          docker-compose up -d
          sleep 20  # Give more time for services to initialize

      - name: Wait for Services to be Ready
        timeout-minutes: 5
        run: |
          while ! curl -s http://127.0.0.1:8069/web/database/selector | grep -q "Databases"; do
            echo "Waiting for Odoo to be ready..."
            docker-compose logs --tail=50
            sleep 10
          done

      - name: Run Tests
        run: |
          docker-compose exec -T odoo odoo \
            --test-enable \
            --stop-after-init \
            --log-level=test \
            --addons-path=/mnt/extra-addons,/usr/lib/python3/dist-packages/odoo/addons

      - name: Save Test Results
        if: always()
        run: docker-compose logs odoo > test-results.log

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: test-results.log

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            achuka99/odoo-proseit:latest
            achuka99/odoo-proseit:${{ github.sha }}
          cache-from: type=registry,ref=achuka99/odoo-proseit:latest
          cache-to: type=inline