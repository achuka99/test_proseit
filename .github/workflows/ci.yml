name: CI/CD Pipeline for Odoo Proseit Project

on:
  push:
    branches:
      - main
    paths:
      - '**/*'
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          PGDATA: /var/lib/postgresql/data/pgdata
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U ${{ secrets.POSTGRES_USER }} -d ${{ secrets.POSTGRES_DB }}"
          --health-interval=20s
          --health-timeout=10s
          --health-retries=5

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Create .env file
        run: |
          cat << EOF > .env
          POSTGRES_DB=${{ secrets.POSTGRES_DB }}
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          PGDATA=/var/lib/postgresql/data/pgdata
          HOST=postgres
          USER=${{ secrets.POSTGRES_USER }}
          PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          EOF

      - name: Build and tag Docker Image
        run: |
          docker build -t achuka99/odoo-proseit:${{ github.sha }} \
                      -t achuka99/odoo-proseit:latest .

      - name: Start Odoo Services
        run: |
          docker-compose -f docker-compose.yml up -d
          sleep 10  # Give services time to initialize

      - name: Wait for Services to be Ready
        timeout-minutes: 5
        run: |
          while ! curl -s http://127.0.0.1:8069/web/database/selector | grep -q "Databases"; do
            echo "Waiting for Odoo to be ready..."
            docker-compose logs --tail=50
            sleep 10
          done

      - name: Run Tests
        run: |
          docker-compose exec -T odoo odoo \
            --test-enable \
            --stop-after-init \
            --log-level=test \
            --addons-path=/mnt/extra-addons,/usr/lib/python3/dist-packages/odoo/addons

      - name: Save Test Results
        if: always()
        run: |
          docker-compose logs odoo > test-results.log

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: test-results.log

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            achuka99/odoo-proseit:latest
            achuka99/odoo-proseit:${{ github.sha }}
          cache-from: type=registry,ref=achuka99/odoo-proseit:latest
          cache-to: type=inline